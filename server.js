const express=require("express"),compression=require("compression"),crypto=require("crypto"),bodyParser=require("body-parser"),path=require("path"),cors=require("cors"),WebSocket=require("ws"),app=express(),server=(app.use(express.json(),express.urlencoded({extended:!0}),compression(),bodyParser.json(),cors()),app.use(express.static(path.join(__dirname,"web"))),app.get("/status",(req,res)=>res.sendFile(path.join(__dirname,"web","status.html"))),app.get("/discord",(req,res)=>res.sendFile(path.join(__dirname,"web","discord.html"))),app.get("/services",(req,res)=>res.sendFile(path.join(__dirname,"web","services.html"))),app.get("/services/instalockapp",(req,res)=>res.sendFile(path.join(__dirname,"web","app_instalock.html"))),app.get("/support",(req,res)=>res.sendFile(path.join(__dirname,"web","support.html"))),app.get("/account",(req,res)=>res.sendFile(path.join(__dirname,"web","login.html"))),app.get("/account/dashboard",(req,res)=>res.sendFile(path.join(__dirname,"web","dashboard.html"))),app.get("/account/invalid_token",(req,res)=>res.send(`<body onload="location.href='https://axonlab.glitch.me/account'"></body>`)),app.get("/account/verified",(req,res)=>res.send(`<body onload="location.href='https://axonlab.glitch.me/account'"></body>`)),app.get("/account/verify",(req,res)=>req.query.token?res.send(`<body onload="location.href='https://axon-services.glitch.me/email_verification?token=${req.query.token}'"></body>`):res.send('<body onload="window.close()"></body>')),app.listen(8080,()=>{})),wss=new WebSocket.Server({server:server});let users={};const supportToken=process.env.SupporterKey;let supportOnline={status:"false",token:void 0,ws:void 0};const cores_html=["aquamarine","black","blue","blueviolet","brown","cadetblue","chocolate","coral","cornflowerblue","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","forestgreen","fuchsia","gold","goldenrod","gray","green","greenyellow","indianred","indigo","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgreen","lightgray","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"];setInterval(()=>{if(0<Object.keys(users).length)for(const userToken of Object.keys(users)){var getUser=users[userToken];const heartbeatToken=crypto.randomBytes(4).toString("hex");getUser.ws.send(JSON.stringify({heartbeat:heartbeatToken})),setTimeout(()=>{var regetUser=users[userToken];if(regetUser&&regetUser.heartbeat!==heartbeatToken&&(delete users[userToken],userToken===supportOnline.token)){supportOnline={status:"false",token:void 0,ws:void 0};for(const user of Object.keys(users))users[user].ws.send(JSON.stringify({status:supportOnline.status}))}},2e3)}},1e4),wss.on("connection",ws=>{const userToken=crypto.randomBytes(3).toString("hex");users[userToken]={color:cores_html[Math.floor(Math.random()*cores_html.length)],blocked:!1,blocked_messages:0,last_message:0,heartbeat:"0",ws:ws},ws.send(JSON.stringify({status:supportOnline.status})),ws.on("message",message=>{try{var data=JSON.parse(message.toString());if(data.heartbeat&&(users[userToken].heartbeat=data.heartbeat),data.message){if(!data.message.startsWith("/"))return 750<data.message.length?ws.send(JSON.stringify({message:"Você não pode enviar mensagens longas.",tags:[["SISTEMA","red"]]})):5<users[userToken].blocked_messages?delete users[userToken]:users[userToken].last_message+1>Math.round(Date.now()/1e3)?(users[userToken].blocked_messages++,ws.send(JSON.stringify({message:"Aguarde para enviar mensagem novamente.",tags:[["SISTEMA","red"]]}))):(users[userToken].blocked_messages=0,users[userToken].last_message=Math.round(Date.now()/1e3),void("true"===supportOnline.status&&!1===users[userToken].blocked&&supportOnline.ws.send(JSON.stringify({message:data.message,notification:!0,tags:[["USUÁRIO","white"],[userToken,users[userToken].color]]}))));var args=data.message.split(" ");if("/support-mode"===args[0]){if(args[1]!==supportToken)return;supportOnline={status:"true",token:userToken,ws:ws};for(const user of Object.keys(users))users[user].ws.send(JSON.stringify({status:supportOnline.status}));ws.send(JSON.stringify({message:"O modo supporter foi ativado com sucesso!",tags:[["SISTEMA","red"]]}))}if("/comandos"===args[0]&&ws.send(JSON.stringify({message:"Lista de comandos:<br>/support-mode (Chave)<br>/support-end<br>/r (Usuário) (Mensagem)<br>/block-user (Usuário)<br>/comandos",tags:[["SISTEMA","red"]]})),"/support-end"===args[0]){if(userToken!==supportOnline.token)return;supportOnline={status:"false",token:void 0,ws:void 0};for(const user of Object.keys(users))users[user].ws.send(JSON.stringify({status:supportOnline.status}))}if("/r"===args[0]){if(userToken!==supportOnline.token)return;var getToken=args[1],getContent=(users[getToken]||(ws.send(JSON.stringify({message:"Esse usuário não existe mais.",tags:[["SISTEMA","red"]]})),delete users[getToken]),data.message.replaceAll(`/r ${getToken} `,""));users[getToken].ws.send(JSON.stringify({message:getContent,tags:[["SUPORTE","green"]]})),ws.send(JSON.stringify({message:"Mensagem enviada com sucesso.",tags:[["SISTEMA","red"]]}))}if("/block-user"===args[0]&&userToken===supportOnline.token){const getToken=args[1];users[getToken]||(ws.send(JSON.stringify({message:"Esse usuário não existe mais.",tags:[["SISTEMA","red"]]})),delete users[getToken]),users[getToken].blocked=!0,ws.send(JSON.stringify({message:"O usuário foi bloqueado com sucesso.",tags:[["SISTEMA","red"]]}))}}}catch(err){delete users[userToken]}})});